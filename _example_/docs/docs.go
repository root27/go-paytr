// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/payment": {
            "post": {
                "description": "Request payment to get iframe token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Payment request process",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.HttpError"
                        }
                    }
                }
            }
        },
        "/paymentCallback": {
            "post": {
                "description": "Paytr Callback API (No request and response needed)",
                "tags": [
                    "Paytr Callback"
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "main.Cart": {
            "description": "Cart represents a single item in the cart",
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test product"
                },
                "price": {
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "main.HttpError": {
            "description": "Error response",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "bad request"
                }
            }
        },
        "main.HttpSuccess": {
            "description": "Success Response",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "iframe": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "main.Request": {
            "description": "Request represents the request payload containing multiple cart items, user name, user email, user address, user phone and total payment",
            "type": "object",
            "properties": {
                "basket": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Cart"
                    }
                },
                "email": {
                    "type": "string",
                    "example": "test@test.com"
                },
                "totalPayment": {
                    "type": "integer",
                    "example": 1000
                },
                "user_address": {
                    "type": "string",
                    "example": "Victor Plains Suite 7389"
                },
                "username": {
                    "type": "string",
                    "example": "john"
                },
                "userphone": {
                    "type": "string",
                    "example": "1-770-736-8031 x56442"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "localhost:6969",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "API Docs",
	Description:      "Cart represents a single item in the cart",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
